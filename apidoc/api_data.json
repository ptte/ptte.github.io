[  {    "type": "post",    "url": "/v2/abtest/update",    "title": "",    "name": "update_test",    "group": "AbTest",    "description": "<p>Update the resolves for a users experiment</p> ",    "permission": [      {        "name": "admin"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/abtest/update\" \\\n  -H \"Content-Type: application/json\" \\\n -d $'{\n  \"experiment\": \"experiment1\",\n  \"group\": \"group2\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "experiment",            "description": "<p>The experiment to update</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "group",            "description": "<p>The group to resolve to</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>JSON Web Token</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  message: {string}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/AbTest.php",    "groupTitle": "AbTest"  },  {    "type": "post",    "url": "/v2/activity/markRead",    "title": "",    "name": "MarkRead",    "group": "Activity",    "description": "<p>Mark an activity item as read</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/activity/markRead\" \\\n -H \"Content-Type: application/json\"\n -d $'{\n  \"activity_id\": \"1234\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "activity_id",            "description": "<ul> <li>The activity id to mark as read</li> </ul> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameterActivityId",            "description": "<p>activity_id is missing or invalid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Activity.php",    "groupTitle": "Activity"  },  {    "type": "post",    "url": "/v2/activity/markUnread",    "title": "",    "name": "MarkUnread",    "group": "Activity",    "description": "<p>Mark an activity item as unread</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/activity/markUnread\" \\\n -H \"Content-Type: application/json\"\n -d $'{\n  \"activity_id\": \"1234\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "activity_id",            "description": "<ul> <li>The activity id to mark as unread</li> </ul> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidParameterActivityId",            "description": "<p>activity_id is missing or invalid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Activity.php",    "groupTitle": "Activity"  },  {    "type": "post",    "url": "/v2/activity/markAllRead",    "title": "",    "name": "markAllRead",    "group": "Activity",    "description": "<p>Mark all activity items as read</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/activity/markAllRead\" \\\n -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Activity.php",    "groupTitle": "Activity"  },  {    "type": "post",    "url": "/v2/analytics/track_token_bundle",    "title": "Track from token bundle",    "name": "Analytics",    "group": "Analytics",    "description": "<p>Unpack token bundle and log any stored click tracking information</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/analytics/track_token_bundle\" \\\n -H \"Content-Type: application/json\"\n -d $'{\n  \"token_bundle\": \"dXNlcl9pZD02MDA2JnRtcF9sb2dpbl90b2tlbj...\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "tb",            "description": "<p>Token bundle - a query parameter found on specific <br> deep links, such as those for the post pages</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successfully sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_TOKEN_BUNDLE",            "description": "<p>Parameter token_bundle is missing</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Analytics.php",    "groupTitle": "Analytics"  },  {    "type": "post",    "url": "/v2/analytics/js-error",    "title": "Log javascript errors",    "name": "JsError",    "group": "Analytics",    "description": "<p>Log javascript errors</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "msg",            "description": "<p>The actual javascript error</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "url",            "description": "<p>The url the error came from</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "line",            "description": "<p>The line number of the error</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "col",            "description": "<p>The column of the error</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "stack",            "description": "<p>A stack trace of the error</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "The",            "description": "<p>user experiencing the error</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Analytics.php",    "groupTitle": "Analytics"  },  {    "type": "post",    "url": "/metrics/datapoints",    "title": "Track datapoints",    "name": "Track_batch_of_datapoints",    "group": "Analytics",    "permission": [      {        "name": "none"      }    ],    "description": "<p>This method can be called to track any datapoint for storage and analytics in for example splunk. It expects a json object with basically arbitrary keys. Some are however necessary.</p> ",    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api-patrik.devlovin.com/metrics/datapoints\" \\\n-H \"Content-Type: application/json\" \\\n-d $'{\n  \"events\": [\n     {\n         \"event\": \"test_event\",\n         \"identifier\": \"fake\"\n     }\n  ]\n}'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "events",            "description": "<p>Array of events</p> "          }        ],        "events": [          {            "group": "events",            "type": "<p>String</p> ",            "optional": false,            "field": "event",            "description": "<p>Name of the event</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "optional": false,            "field": "identifier",            "description": "<p>Identifier of person triggering the event</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"us\"",              "\"se\"",              "\"etc\""            ],            "optional": false,            "field": "country",            "description": "<p>Two letter country code</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "optional": false,            "field": "uri",            "description": "<p>Full uri for the request this happened on</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"US\"",              "\"Europe\"",              "\"ROW\""            ],            "optional": false,            "field": "region",            "description": "<p>ROW means rest of world</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"desktop\"",              "\"phone\"",              "\"tablet\""            ],            "optional": false,            "field": "device_family",            "description": ""          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"iphone\"",              "\"web\"",              "\"email\"",              "\"android\""            ],            "optional": false,            "field": "platform",            "description": ""          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"activate\"",              "\"core_app\"",              "\"ios\"",              "\"android\""            ],            "optional": false,            "field": "codebase",            "description": ""          },          {            "group": "events",            "type": "<p>String</p> ",            "allowedValues": [              "\"server\"",              "\"browser\"",              "\"ios\"",              "\"android\""            ],            "optional": false,            "field": "event_originator",            "description": ""          },          {            "group": "events",            "type": "<p>Number</p> ",            "optional": false,            "field": "user_id",            "description": ""          },          {            "group": "events",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "signed_in",            "description": ""          },          {            "group": "events",            "type": "<p>String</p> ",            "optional": false,            "field": "browser",            "description": "<p>User agent</p> "          },          {            "group": "events",            "type": "<p>String</p> ",            "optional": false,            "field": "os",            "description": "<p>Operating system</p> "          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "payload",            "description": "<p>The payload must be an object</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "json",            "description": "<p>Invalid JSON</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "events",            "description": "<p>The events attribute must be an array</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "empty_events",            "description": "<p>The events array cannot be empty</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "app/controllers/web/Metrics.php",    "groupTitle": "Analytics"  },  {    "type": "post",    "url": "/v2/announcements",    "title": "Add Announcements",    "name": "Add_Announcements",    "description": "<p>Adds an announcment to our system</p> ",    "group": "Announcements",    "permission": [      {        "name": "admin"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/announcements\" \\\n-H \"Authorization: Bearer TOKEN\"\\\n-H \"Content-Type: application/json\" \\\n-d $'{\n \"applications\": [1],\n \"title\": \"Lol test\",\n \"description\": \"Better lol rgan no\",\n \"is_image_dark\": true,\n \"banner_url\": \"http://www.lol.com/image.gif\",\n \"url\": \"http://www.lol.com\"\n}'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "applications",            "description": "<p>Application ids where to show this announcement valid applications: bl web = 1, bl IOS = 2, finale ios = 4, bl android = 8;</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Announcement title</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Announcement description</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "banner_url",            "description": "<p>Announcement banner_url</p> "          },          {            "group": "Parameter",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_image_dark",            "description": "<p>Announcement is_image_dark</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "url",            "description": "<p>Announcement url</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>ID of new announcement</p> "          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n{\n  id: 1234\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_APP",            "description": "<p>Missing applications</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "get",    "url": "/v2/announcements",    "title": "Get Announcements",    "name": "Announcements",    "group": "Announcements",    "description": "<p>Returns a list of announcements sorted by date</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/announcements?locale=en_US&page=1&limit=5\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "locale",            "description": "<p>Users language preference as a locale</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": ""          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": true,            "field": "limit",            "defaultValue": "5",            "description": ""          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"yes\"",              "\"no\""            ],            "optional": true,            "field": "includeRead",            "defaultValue": "no",            "description": "<p>wether to include read announcements</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": []\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"announcement_link\",\n          \"id\": \"1\",\n          \"title\": \"lol\",\n          \"url\": \"\",\n          \"description\": \"lol\\nfdffdfgf\",\n          \"banner_url\": \"http://link.com\",\n          \"is_image_dark\": \"1\",\n          \"created_date\": \"0\",\n          \"is_read\": false\n        }\n      }\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "type",            "description": "<p>Type of announcement</p> "          },          {            "group": "result",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Announcement id</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "banner_image",            "description": "<p>Url to image</p> "          },          {            "group": "result",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_image_dark",            "description": "<p>Whether the image is dark or not (main color)</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Announcement title</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Text for announcement</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "url",            "description": "<p>Outgoing url</p> "          },          {            "group": "result",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_read",            "description": "<p>Whether this user has seen this announcement or not</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": "<p>Url to get next page, only present if available</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/v2/announcements/{id}/disable",    "title": "Disable",    "name": "Disable_an_Announcement",    "description": "<p>Disable an announcement, when we don't want it to show any more to our users.</p> ",    "group": "Announcements",    "permission": [      {        "name": "admin"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/announcements/5/disable\" \\\n-H \"Authorization: Bearer TOKEN\"\\\n-H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>ID of announcement to disable</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n''",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ANNOUNCEMENT",            "description": "<p>Missing announcement id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Invalid data passed to model</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/announcement/markallasread",    "title": "Mark all as read",    "name": "Mark_all_announcements_as_read",    "group": "Announcements",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/announcements/markallasread\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n{}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/v2/announcements/{id}/read",    "title": "Mark announcement as read",    "name": "Mark_announcement_as_read",    "description": "<p>Returns a list of announcements sorted by date</p> ",    "group": "Announcements",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/announcements/21/read\" \\\n  -H \"Content-Type: application/json\"\n-d \"{\\\"page_type\\\": \\\"feed\\\", \\\"page_context\\\": \\\"all_unread\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Announcement id</p> "          }        ],        "Optional": [          {            "group": "Optional",            "type": "<p>string</p> ",            "optional": false,            "field": "page_type",            "description": "<p>The page_type to record on the datapoint that fires</p> "          },          {            "group": "Optional",            "type": "<p>string</p> ",            "optional": false,            "field": "page_context",            "description": "<p>The page_context to record on the datapoint that fires</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n{}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Missing announcement id / invalid id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/auth/grant/:type",    "title": "Grants",    "name": "Auth_grants",    "group": "Auth",    "description": "<p>Authentication grants for applications and users</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/auth/grant/app\" \\\n  -H \"Content-Type: application/json\" \\\n -d $'{\n  \"app_id\": \"fdsfg\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"app\"",              "\"user\"",              "\"legacy\""            ],            "optional": false,            "field": "type",            "description": "<p>Type of grant</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "app_id",            "description": "<p>Application id</p> "          }        ],        "User": [          {            "group": "User",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User email</p> "          },          {            "group": "User",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>User password</p> "          }        ],        "Legacy": [          {            "group": "Legacy",            "type": "<p>String</p> ",            "optional": false,            "field": "legacy_token",            "description": "<p>Old legacy token</p> "          },          {            "group": "Legacy",            "type": "<p>Number</p> ",            "optional": false,            "field": "user",            "description": "<p>User id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  token: {string}\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>JSON Web Token</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_APP_ID",            "description": "<p>Missing app_id field</p> "          }        ],        "User": [          {            "group": "User",            "optional": false,            "field": "MISSING_PARAM_EMAIL",            "description": "<p>Missing email field</p> "          },          {            "group": "User",            "optional": false,            "field": "MISSING_PARAM_PASSWORD",            "description": "<p>Missing password field</p> "          },          {            "group": "User",            "optional": false,            "field": "USER_NOT_FOUND",            "description": ""          },          {            "group": "User",            "optional": false,            "field": "USER_NOT_VALIDATED",            "description": ""          },          {            "group": "User",            "optional": false,            "field": "USER_PERMISSION_FAILURE",            "description": "<p>User doesn't have required level</p> "          },          {            "group": "User",            "optional": false,            "field": "INVALID_PASSWORD",            "description": ""          }        ],        "Legacy": [          {            "group": "Legacy",            "optional": false,            "field": "USER_NOT_FOUND",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "MISSING_PARAM_LEGACY_TOKEN",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "MISSING_PARAM_USER",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "INVALID_TOKEN",            "description": ""          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Auth.php",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/auth/token_bundle",    "title": "",    "name": "Auth_via_token_bundle",    "group": "Auth",    "description": "<p>Authentication for given token bundles</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/auth/token_bundle\" \\\n  -H \"Content-Type: application/json\" \\\n -d $'{\n  \"app_id\": \"fdsfg\",\n  \"token_bundle\": \"dXNlcl9pZD02MDA2J...\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "app_id",            "description": "<p>Application id</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "token_bundle",            "description": "<p>Token bundle (e.g. from deep-link)</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "(Login success) {json} Success-response:",          "content": "{\n  login: true,\n  user_id: {string},\n  level: {string},\n  api_key: {string},\n  metrics_id: {string}\n}",          "type": "json"        },        {          "title": "(Login unsuccessful) {json} Success-response:",          "content": "{\n  login: false,\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "login",            "description": "<p>Boolean on success of login attempt</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "user_id",            "description": "<p>User's id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "level",            "description": "<p>User's level / authority</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "api_key",            "description": "<p>Api_key to use for authentication requests from client</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "metrics_id",            "description": "<p>User's metric id / stats identifier</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_TOKEN_BUNDLE",            "description": "<p>Missing token bundle</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_APP_ID",            "description": "<p>Missing app_id field</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Auth.php",    "groupTitle": "Auth"  },  {    "type": "*",    "url": "/anything",    "title": "JWT Authentication",    "name": "JWT_Auth",    "group": "Auth",    "description": "<p>To authorize any request with a bearer token, just add a header as described below to your request.</p> <p>The token can be requested from the /auth endpoint</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Bearer token header</p> "          }        ]      },      "examples": [        {          "title": "Header-example:",          "content": "{\n  \"Authorization\": \"Bearer TOKEN\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>Token invalid</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "USER_NOT_FOUND",            "description": "<p>This user doesn't exist</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "EXPIRED_TOKEN",            "description": "<p>This token has expired</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_APP_ID",            "description": "<p>No application id provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/ApiController.php",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/v2/blogs/add_tag",    "title": "add tag",    "name": "Add_blog_tag",    "group": "Blog",    "description": "<p>Send in tags to label a blog</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/blog/follow\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"follow\\\": true, \\\"id\\\": 156}\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid/No blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_TAG_NAME",            "description": "<p>Invalid/No tag_name provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Tags.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/blogs/profile?blog_id=:id",    "title": "Blog profile",    "name": "Blog_profile",    "group": "Blog",    "description": "<p>Get information regarding a blog's profile</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/profile?blog_id=156\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "Contains",            "description": "<p>metadata and result array. First element in result list is blog profile.</p> "          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": {\n      \"blogposts\": {\n        \"156\": [\n          \"282797:156\",\n          ...,\n        ],\n        ...,\n      },\n      ...,\n    },\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"blog\",\n        \"id\": \"156\"\n      }\n    },\n    {\n      \"entity\": {\n        \"type\": \"post\",\n        \"id\": \"114978:156\",\n        \"postId\": \"114978\",\n        \"blogId\": \"156\",\n      }\n    },\n    ...,\n    {\n      \"entity\": {\n        \"type\": \"list\",\n        \"meta\": [],\n        \"items\": [\n          {\n            \"entity\": {\n              \"type\": \"blog\",\n              \"id\": \"1579679\"\n            },\n            \"inclusion\": [\n              {\n                \"reason\": \"recommendation\",\n                \"engine\": \"blog/1.3.0 engine-source/1.2.1\"\n              }\n            ]\n          },\n          ...,\n        ]\n      }\n    }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>No blog id provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/blogs/check_status",    "title": "Check status of added blog",    "name": "Check_status_of_attempt_to_add_blog",    "group": "Blog",    "description": "<p>When a user attempts to add a blog, they get an immediate response back with a process number - this number maps back to a server-side asyncronous process / background worker.</p> <p>This endpoint should be used by the client — normally through a polling process (e.g. every 2 seconds) — to check in on how this process is going (e.g. did we encounter any errors? was it successful? etc.)</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "attempt_num",            "description": "<p>Attempt number received from add blog attempt</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/check_status?attempt_num=1234\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Succeeded": [          {            "group": "Succeeded",            "type": "<p>String</p> ",            "optional": false,            "field": "status_code",            "description": "<p>Machine-string of add blog status</p> <ul> <li>Attempting <ul> <li>STATUS_CODE_ATTEMPTING</li> <li>STATUS_CODE_FOUND_SITE_SEARCHING_FOR_RSS</li> <li>STATUS_CODE_FOUND_RSS_MATCHED_KNOWN_ROUTE</li> <li>STATUS_CODE_FOUND_RSS_IN_HTML</li> <li>STATUS_CODE_FOUND_RSS_IN_FRAME</li> <li>STATUS_CODE_CREATING_BLOG</li> <li>STATUS_CODE_FAILED_CREATING_BLOG</li> </ul> </li> <li>Failed <ul> <li>STATUS_CODE_FAILED_FETCHING_URL</li> <li>STATUS_CODE_FAILED_SEARCH_FOR_RSS</li> <li>STATUS_CODE_FAILED_CREATING_BLOG</li> </ul> </li> <li>Succeeded <ul> <li>STATUS_CODE_BLOG_CREATION_SUCCESS</li> <li>STATUS_CODE_FOUND_EXISTING_BLOG_SUCCESS</li> </ul> </li> </ul> "          }        ]      },      "examples": [        {          "title": "(Attempting) {json} Success-response:",          "content": "{\n   \"finished\": false,\n   \"status_code\": \"STATUS_CODE_ATTEMPTING\"\n}",          "type": "json"        },        {          "title": "(Attempting) {json} Success-response:",          "content": "{\n   \"finished\": false,\n   \"status_code\": \"STATUS_CODE_FOUND_RSS_IN_HTML\"\n}",          "type": "json"        },        {          "title": "(Failure) {json} Success-response:",          "content": "{\n   \"finished\": true,\n   \"succeeded\": false,\n   \"status_code\": \"STATUS_CODE_FAILED_SEARCH_FOR_RSS\"\n}",          "type": "json"        },        {          "title": "(Succeeded) {json} Success-response:",          "content": "{\n   \"finished\": true,\n   \"succeeded\": true,\n   \"status_code\": \"STATUS_CODE_BLOG_CREATION_SUCCESS\"\n   \"new_blog_ids\": [\"156\"],\n   \"old_blog_ids\": []\n}",          "type": "json"        },        {          "title": "(Succeeded) {json} Success-response:",          "content": "{\n   \"finished\": true,\n   \"succeeded\": true,\n   \"status_code\": \"STATUS_CODE_FOUND_EXISTING_BLOG_SUCCESS\"\n   \"new_blog_ids\": [],\n   \"old_blog_ids\": [\"156\", \"157\"]\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "delete",    "url": "/v2/blogs/delete_post/{blog_id}/{post_id}",    "title": "Delete blog post",    "name": "Delete_blog_post",    "group": "Blog",    "description": "<p>Delete a blog post. Only open to admins or the blog's owner.</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/delete_post/123/456\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INSUFFICIENT_PERMISSIONS",            "description": "<p>Endpoint is only open to admin or the blog's owner</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "POST_OWNED_BY_MANY_BLOGS",            "description": "<p>If a post belongs to many blogs, we should only remove it via admin</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/blogs/{category}",    "title": "Find blogs",    "name": "Find_blogs",    "group": "Blog",    "description": "<p>List blog ids for find blogs</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/recommended\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  {\n    \"meta\": {\n         \"nextURL\": /v2/blogs/4?page=2,\n         \"resolved\": {\n             \"blog\": {\n                 ...\n             }\n         }\n     }\n  }\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "contains",            "description": "<p>metadata and array result of blog_ids</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "post",    "url": "/v2/blog/follow",    "title": "Follow and unfollow blogs",    "name": "Follow_and_unfollow_blogs",    "group": "Blog",    "description": "<p>Send in a list of blogs and wether to unfollow or follow them</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/blog/follow\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"follow\\\": true, \\\"id\\\": 156}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "follow",            "description": "<p>Wether to follow or unfollow (required)</p> "          },          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "blog_ids",            "description": "<p>Blog ids to operate on</p> "          },          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "id",            "description": "<p>Single blog id to operate on</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "group_name",            "description": "<p>Group to put blogs in, will be created</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "follow_owners",            "description": "<p>Follow all the blog owners, default true</p> "          }        ],        "Analytics": [          {            "group": "Analytics",            "type": "<p>String</p> ",            "optional": false,            "field": "follow_source",            "description": ""          },          {            "group": "Analytics",            "type": "<p>String</p> ",            "optional": false,            "field": "method",            "description": ""          },          {            "group": "Analytics",            "type": "<p>String</p> ",            "optional": false,            "field": "context",            "description": ""          },          {            "group": "Analytics",            "type": "<p>String</p> ",            "optional": false,            "field": "page_type",            "description": ""          },          {            "group": "Analytics",            "type": "<p>Array</p> ",            "optional": false,            "field": "metrics",            "description": "<p>Free form array of metrics to append</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"data\": {\n    \"num_new_posts\": 0\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_ID_OR_BLOG_IDS",            "description": "<p>No blogs provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/blogs/get_blog_tags",    "title": "",    "name": "GetTagsForBlog",    "group": "Blog",    "description": "<p>List blog tags (ids and counts) for a given blog</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/get_blog_tags",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  {\n    \"tags\": [\n      [\n         \"name\" => \"fashion\",\n         \"count\" => 4096,\n         \"score\" => 100\n      ],\n             ...\n    ]\n  }\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "contains",            "description": "<p>dictionaries with the blog tags.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Tags.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/blog/followers",    "title": "Get followers",    "name": "Get_followers_for_a_blog",    "group": "Blog",    "description": "<p>Get a list of the followers for a certain blog, applying the resolvers users,followstatus,userposts,smallposts,pornfilters</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/blog/follow?blog_id=156&page=1\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"follow\\\": true, \\\"id\\\": 156}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "blog_id",            "description": ""          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": ""          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "count",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n      \"resolved\": {\n        \"userposts\": {\n          \"6004\": []...\n        },\n        \"smallpost\": {},\n        \"user\": {},\n        \"followstatus\": [\n        ]\n      }\n      },\n  \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"user\",\n          \"id\": \"6004\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"user\",\n          \"id\": \"1005\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"user\",\n          \"id\": \"6003\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"user\",\n          \"id\": \"13\"\n        }\n      }\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "Meta": [          {            "group": "Meta",            "type": "<p>Array</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          },          {            "group": "Meta",            "type": "<p>Array</p> ",            "optional": false,            "field": "resolved",            "description": ""          }        ],        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>List of users</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>No blog provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_PAGE",            "description": "<p>No page</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PARAM_PAGE_NOT_NUMERIC",            "description": "<p>Invalid page</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "get",    "url": "/v2/onboarding_blogs",    "title": "Onboarding blogs",    "name": "Onboarding_blogs",    "group": "Blog",    "description": "<p>List blog ids for onboarding blogs</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/onboarding_blogs\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  {\n    \"name\": \"Fashion\",\n    \"blogs\": [\n      11532599,\n      11518251,\n      12710135,\n      1772136\n    ]\n  }\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "contains",            "description": "<p>dictionaries with name of category and blog ids.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Blog.php",    "groupTitle": "Blog"  },  {    "type": "post",    "url": "/v2/collection/addLovesToCollection",    "title": "",    "name": "Add_Stories_For_Saved_Loved_Looks",    "group": "Collections",    "description": "<p>Save locally stored posts as stories in Loved Looks</p> ",    "permission": [      {        "name": "auth"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "collection_name",            "description": "<p>The collection name 'loved_looks'</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "compound_post_ids",            "description": "<p>The compound id is blog_id+post_id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>User ID is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "post",    "url": "/v2/collections/{collection_id}/stories",    "title": "Add a story to a collection",    "name": "Add_a_story_to_a_collection",    "group": "Collections",    "description": "<p>Add a story to a collection</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/collections/1/stories\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "collection_id",            "description": "<p>Collection ID</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "post_id",            "description": "<p>Post id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>Blog id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "cover_image",            "description": "<p>New cover image for collection</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "page_type",            "description": "<p>What page_type you save a post from</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "context_id",            "description": "<p>User id if you resave a post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "context",            "description": "<p>What context you save a post from (more granular than page_type)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "image_url",            "description": "<p>URL image you wanted to comment on</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "caption",            "description": "<p>Caption you want to add to your save</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "quote",            "description": "<p>Exerpt from post you want to include in your save</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "inclusion_reason",            "description": "<p>Inclusion reason of post (e.g. <code>activity</code>)</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_POST_ID",            "description": "<p>No param post_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>No param blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Invalid collection ID</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER_ID",            "description": "<p>Signed in user does not have permissions to edit collection</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_IMAGE_URL",            "description": "<p>Invalid image url provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_QUOTE",            "description": "<p>Invalid quote provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_CAPTION",            "description": "<p>Invalid caption provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "FAILED_SAVE",            "description": "<p>We failed to save the post or caption</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "post",    "url": "/v2/collections/save_post",    "title": "Add story to a collection by name",    "name": "Add_a_story_to_a_collection_by_name_with_caption",    "group": "Collections",    "description": "<p>This lets you save a post to a collection and also adding a caption in the form of a quote, and image or a caption / comment</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/collections/save_post\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "caption",            "description": ""          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "quote",            "description": ""          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "image_url",            "description": "<p>Url to image</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "post_id",            "description": "<p>Post id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>Blog id</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "collection_name",            "description": "<p>Collection name</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "cover_image",            "description": "<p>Cover image</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "page_type",            "description": "<p>What page_type you save a post from</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "context_id",            "description": "<p>User id if you resave a post</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "context",            "description": "<p>What page you save a post from</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "inclusion_reason",            "description": "<p>What page you save a post from</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true,\n  'collection_id' : 2\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ],        "collection_id": [          {            "group": "collection_id",            "type": "<p>number</p> ",            "optional": false,            "field": "the",            "description": "<p>id of the collection</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_POST_ID",            "description": "<p>No param post_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>No param blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_IMAGE_URL",            "description": "<p>Invalid image url provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_QUOTE",            "description": "<p>Invalid quote provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_CAPTION",            "description": "<p>Invalid caption provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "FAILED_SAVE",            "description": "<p>We failed to save the post or caption</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_COLLECTION_NAME",            "description": "<p>No param collection_name provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collection/forstory",    "title": "Get for a story",    "name": "Collections_for_a_story",    "group": "Collections",    "description": "<p>Get collections to where a certain story is saved</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collection/forstory?story=1234:156\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "story",            "description": "<p>Compound story id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": "<p>Page in order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"119\": {\n            \"id\": \"119\",\n            \"name\": \"Yo kids\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/119\",\n            \"slug\": \"yo-kids\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"118\": {\n            \"id\": \"118\",\n            \"name\": \"Cool kids\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192322581,\n            \"modified\": 1438192322581,\n            \"lastAdd\": 1438192323536,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438192322615\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/118\",\n            \"slug\": \"cool-kids\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"117\": {\n            \"id\": \"117\",\n            \"name\": \"lol\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438190596488,\n            \"modified\": 1438190596488,\n            \"lastAdd\": 1438190597309,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438190596503\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/117\",\n            \"slug\": \"lol\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"116\": {\n            \"id\": \"116\",\n            \"name\": \"blabla\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": \"http://3.bp.blogspot.com/-h6\",\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1432301833407,\n            \"modified\": 1432301833407,\n            \"lastAdd\": 1438192590475,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1432301833410\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/116\",\n            \"slug\": \"blabla\",\n            \"postCount\": 2,\n            \"followerCount\": 0\n          }\n        }\n      },\n      \"user\": {\n        \"6004\": {\n          \"user_id\": \"6004\",\n          \"location\": null,\n          \"facebook_profile\": null,\n          \"twitter_profile\": null,\n          \"first_name\": \"John\",\n          \"last_name\": null,\n          \"avatar\": \"/images/user-default-120-3.png\",\n          \"username\": \"darren9\",\n          \"profile_link\": \"/people/john-6004\",\n          \"user_public_url\": \"https://www.bloglovin.com/people/john-6004\",\n          \"about\": \"\",\n          \"exists\": true,\n          \"cache\": true,\n          \"followers\": 1,\n          \"type\": \"user\"\n        }\n      }\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"119\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"118\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"117\"\n        }\n     },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"116\"\n        }\n      }\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>Object with collection resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_STORY",            "description": "<p>No query param story provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/users/{user_id}/collections",    "title": "Get collections for a user",    "name": "Collections_for_a_user",    "group": "Collections",    "description": "<p>Get collections for a user</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/1000/collections?before=1438192489036&resolve=collections\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The user's id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "before",            "description": "<p>The time all collections returned should have been added before</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>A list of objects to resolve</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "count",            "description": "<p>Max number of objects to resolve</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"100\": {\n            \"id\": \"100\",\n            \"name\": \"Test Collection\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 99,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/100\",\n            \"slug\": \"test-collection\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          }\n        },\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      \"collectionposts\": {\n        \"100\": [\n          {\n            \"post_id\": \"1234\",\n            \"blog_id\": \"987\",\n            \"fav_id\": \"88\"\n          }\n        ]\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections and posts</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>and smallpost Objects with resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>User ID is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "post",    "url": "/v2/collections",    "title": "Create a collection",    "name": "Create_a_collection",    "group": "Collections",    "description": "<p>Create a collection</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/collections\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Name of collection (required)</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "category_id",            "description": "<p>Category ID (required)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Description of collection</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "cover_image",            "description": "<p>Cover image URL of collection</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "public",            "description": "<p>Whether the collection should be public or not</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'collection_id' : 1\n}",          "type": "json"        }      ],      "fields": {        "collection_id": [          {            "group": "collection_id",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>of collection if successful, null if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NAME",            "description": "<p>No param name provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "delete",    "url": "/v2/collections/{collection_id}",    "title": "Delete a collection",    "name": "Delete_a_collection",    "group": "Collections",    "description": "<p>Delete a collection</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/collections/1\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "collection_id",            "description": "<p>Collection ID</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "migrate_to",            "description": "<p>The id of the collection to migrate stories to, if any</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Invalid collection ID</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_MIGRATE_TO",            "description": "<p>Invalid migrate_to collection ID</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER_ID",            "description": "<p>Signed in user does not have permissions to edit collection</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "delete",    "url": "/v2/collections/collection_id/stories/{post_id}",    "title": "Delete a story",    "name": "Delete_a_story",    "group": "Collections",    "description": "<p>Delete a story</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/collections/1/stories/2\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "fav_id",            "description": "<p>The id associated to the saved post in a collection</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_FAV_ID",            "description": "<p>Invalid fav_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Invalid fav_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>User not signed in</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER_ID",            "description": "<p>Signed in user does not have permissions to delete story</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "delete",    "url": "/v2/collections/collection_name/stories",    "title": "Delete a story",    "name": "Delete_a_story_by_collection_name",    "group": "Collections",    "description": "<p>Delete a story by collection name</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/collections/mycollection/stories\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "collection_name",            "description": "<p>The name associated to the saved post collection</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "blog_id",            "description": ""          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "post_id",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_NAME",            "description": "<p>No collection name provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>User not signed in</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collections/{collection_id}",    "title": "Get a collection",    "name": "Get_collection",    "group": "Collections",    "description": "<p>Get collection</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collections/100?resolve=collections\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>The id of the collection to resolve</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>A list of objects to resolve</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"100\": {\n            \"id\": \"100\",\n            \"name\": \"Test Collection\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 99,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/100\",\n            \"slug\": \"test-collection\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          }\n        },\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      },\n      \"collectionposts\": {\n        \"100\": [\n          {\n            \"post_id\": \"1234\",\n            \"blog_id\": \"987\",\n            \"fav_id\": \"88\"\n          }\n        ]\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections and posts</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>and smallpost Objects with resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Colllection ID is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collections",    "title": "Get collections",    "name": "Get_collections",    "group": "Collections",    "description": "<p>Get collections</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collections?ids[0]=100&ids[1]=101&resolve=collections\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "ids",            "description": "<p>The ids of the collections to resolve</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>A list of objects to resolve</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"100\": {\n            \"id\": \"100\",\n            \"name\": \"Test Collection\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 99,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/100\",\n            \"slug\": \"test-collection\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          }\n        },\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      },\n      \"collectionposts\": {\n        \"100\": [\n          {\n            \"post_id\": \"1234\",\n            \"blog_id\": \"987\",\n            \"fav_id\": \"88\"\n          }\n        ]\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections and posts</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>and smallpost Objects with resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_IDS",            "description": "<p>IDs are not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collections/{collection_name}/user/{user_id}/stories",    "title": "Get stories for a user's collection by name",    "name": "Get_stories_for_a_user_s_collection_by_collection_name",    "group": "Collections",    "description": "<p>Get stories for a user's collection by collection name</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collections/Saved%20Posts/user/6006/stories\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_id",            "description": "<p>User id</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "collection_name",            "description": "<p>Collection name</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"100\": {\n            \"id\": \"100\",\n            \"name\": \"Test Collection\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 99,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/100\",\n            \"slug\": \"test-collection\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          }\n        },\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"post\",\n          \"id\": \"1234:987\",\n          \"postId\": \"1234\",\n          \"blogId\": \"987\",\n          \"collection_id\": \"100\"\n          \"story_id\": \"777\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>Invalid user_id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_COLLECTION_NAME",            "description": "<p>No param collection_name provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_NAME",            "description": "<p>Collection by name does not exist for user</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collections/{collection_id}/stories",    "title": "Get stories for a collection",    "name": "Stories_for_a_collection",    "group": "Collections",    "description": "<p>Stories for a collection</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collections/1000/stories?page=1&resolve=posts\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "collection_id",            "description": "<p>The collection ID to retrieve stories for</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": "<p>The page to retrieve (results are paginated)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>A list of objects to resolve</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "count",            "description": "<p>Max number of objects to resolve</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"100\": {\n            \"id\": \"100\",\n            \"name\": \"Test Collection\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 99,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/100\",\n            \"slug\": \"test-collection\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          }\n        },\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"post\",\n          \"id\": \"1234:987\",\n          \"postId\": \"1234\",\n          \"blogId\": \"987\",\n          \"collection_id\": \"100\"\n          \"story_id\": \"777\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections and posts</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>and smallpost Objects with resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Collection ID is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/users/{user_id}/stories",    "title": "Get stories for a user",    "name": "Stories_for_a_user",    "group": "Collections",    "description": "<p>Get stories for a user</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/1000/stories?before=987&resolve=posts\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_id",            "description": "<p>The user's id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "before",            "description": "<p>The id all posts returned should have been added before</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>A list of objects to resolve</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"smallpost\": {\n          \"1234:987\": {\n          \"post_id\": \"1234\",\n          \"blog_id\": \"987\",\n          \"link\": \"http://highscalability.com/blog/2014/11/5/a-few-really-good-tech-podcas.html\",\n          \"content\": \"Podcasts are back.\n          \"date\": \"1438192488151\",\n          \"title\": \"A Few Really Good Tech Podcasts for Your Listening Pleasure\",\n          \"media\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n          \"media_type\": \"image\",\n          \"images\": {\n            \"thumbnail\": {\n              \"key\": \"https://farm4.staticflickr.com/3951/15525277428_8841c8614d_n.jpg\",\n              \"url\": \"/bloglovin/abc=?checksum=def&format=i&__imagescaler__\"\n            }\n          },\n          \"name\": \"High Scalability - reliable websites.\",\n          \"out_link\": \"/link/post?post=255881&blog=807691&group=0&frame=1&frame_type=a\",\n          \"post_link\": \"https://www-darren.devlovin.com/blog/post/807691/255881\",\n          \"post_page_link\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"post_public_url\": \"https://www.bloglovin.com/blogs/high-807691/a-255881\",\n          \"likes\": 1\n        },\n      },\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"100\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"post\",\n          \"id\": \"1234:987\",\n          \"postId\": \"1234\",\n          \"blogId\": \"987\"\n        }\n      },\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of posts</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "post",            "description": "<p>Objects with resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>User ID is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "put",    "url": "/v2/collections/{collection_id}",    "title": "Update a collection",    "name": "Update_a_collection",    "group": "Collections",    "description": "<p>Update a collection</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"PUT\" \"https://api.bloglovin.com/v2/collections/1\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "collection_id",            "description": "<p>Collection ID (required)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Name of collection (required)</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "category_id",            "description": "<p>Category ID (required)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Description of collection</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "cover_image",            "description": "<p>Description of cover_image</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "public",            "description": "<p>Whether the collection should be public or not</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  'success' : true\n}",          "type": "json"        }      ],      "fields": {        "success": [          {            "group": "success",            "type": "<p>bool</p> ",            "optional": false,            "field": "true",            "description": "<p>if successful, false if not</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NAME",            "description": "<p>No param name provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_COLLECTION_ID",            "description": "<p>Invalid collection ID</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER_ID",            "description": "<p>Signed in user does not have permissions to edit collection</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "get",    "url": "/v2/collection/usersforstory",    "title": "Get users for a story",    "name": "Users_for_a_story",    "group": "Collections",    "description": "<p>Get users who have saves a story to a collection</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collection/usersforstory?story=1234:156\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "story",            "description": "<p>Compound story id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": "<p>Page in order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"userposts\": {\n             \"6004\": [\n                 \"257696:1788286\",\n                 \"284671:1788286\",\n                 \"262093:1788286\"\n             ]\n         },\n         \"smallpost\" : {\n             ...\n         },\n        \"user\" {\n             \"6004\": {\n                 \"user_id\": \"6004\",\n                 \"location\": null,\n                 \"facebook_profile\": null,\n                 \"twitter_profile\": null,\n                 \"first_name\": \"John\",\n                 \"last_name\": null,\n                 \"avatar\": \"/images/user-default-120-3.png\",\n                 \"username\": \"darren9\",\n                 \"profile_link\": \"/people/john-6004\",\n                 \"user_public_url\": \"https://www.bloglovin.com/people/john-6004\",\n                 \"about\": \"\",\n                 \"exists\": true,\n                 \"cache\": true,\n                 \"followers\": 1,\n                 \"type\": \"user\"\n             }\n         }\n       },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"user\",\n          \"id\": \"6004\"\n        }\n      },\n    ]\n}",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of users</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>Object with collection, user resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_STORY",            "description": "<p>No query param story provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "*",    "url": "/",    "title": "Error handler",    "name": "Error_handler",    "group": "Error",    "error": {      "examples": [        {          "title": "Error-example:",          "content": "{\n  error: {String} Machine readable error code,\n  message: {String} Human readable error message,\n  code: {Number} HTTP status code,\n  data: {Object} Error related data,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Error.php",    "groupTitle": "Error"  },  {    "type": "post",    "url": "/v2/smartfeed/unread-with-activity/markRead",    "title": "",    "name": "markUnreadWithActivityAsRead",    "group": "Feed",    "description": "<p>Mark all activity and post items as read</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/smartfeed/unread-with-activity/markRead\" \\\n -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Smartfeed.php",    "groupTitle": "Feed"  },  {    "type": "post",    "url": "/v2/groups",    "title": "Create group",    "name": "Group_create",    "group": "Group",    "description": "<p>Creates a group</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/groups\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"blog_ids\\\": [1,2,3], \\\"name\\\": \\\"Test\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "blog_ids",            "description": "<p>List of blog ids for group</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Name of group</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"created\": true,\n      \"name\": \"Test\",\n      \"id\": \"1\"\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>contains the name of the group, the id, and whether or not it is new. The user must already be following the blogs in order to add them to the group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NAME",            "description": "<p>Missing name</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_IDS",            "description": "<p>Parameter blog_ids is not an array</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "delete",    "url": "/v2/groups/{group}",    "title": "Delete",    "name": "Group_delete",    "description": "<p>Deletes a group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/groups/100\" \\\n-H \"Authorization: XYZ\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "group",            "description": "<p>Group id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>contains whether or not it successfully deleted the group. The user still follows all blogs in that group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_ID",            "description": "<p>Missing group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Invalid group id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "post",    "url": "/v2/groups/move_blog",    "title": "Move blog to different group",    "name": "Group_move_blog",    "description": "<p>Move a blog to an existing group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/groups/move_blog\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"blog_id\\\": 1, \\\"group_id\\\": 100}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>ID of blog to add</p> "          },          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "group_id",            "description": "<p>ID of group to move blog to</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>will contain a boolean success. If it is successful the blog was moved to the new group. A blog can only be a part of one group per user at a time.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_GROUP_ID",            "description": "<p>Missing group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>Missing blog id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_GROUP_ID",            "description": "<p>Invalid group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "delete",    "url": "/v2/groups/remove_blog/{blog}",    "title": "Remove blog from group",    "name": "Group_remove_blog",    "description": "<p>Remove a blog from a group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/groups/remove_blog/100\" \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "blog",            "description": "<p>ID of blog to remove from group</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>just says success is true. The user still follows the blog in that group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>Missing blog_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "post",    "url": "/v2/loves/user/get_posts",    "title": "Get a user's loved posts",    "name": "Get_a_user_s_loved_posts",    "group": "Loves",    "description": "<p>Get a user's loved posts</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/loves/user/get_posts?user_id=6006\" \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "user_id",            "description": "<p>Id of user</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "max_created_date",            "description": "<p>(Optional) Offset for endless scrolling</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"nextUrl\": \"/v2/loves/post/get_users?blog_id=123&post_id=456&max_created_date=145764262\",\n    \"resolved\": {\n      \"smallpost\": {\n        \"19401:156\": [\n          \"title\": \"The Simple Leads to the Spectacular\",\n          \"images\": {\n            ..\n          },\n          ...,\n        ],\n        ...,\n      },\n      \"imagesize\": {\n        \"http://i1.ytimg.com/vi/Fq7oSOl7nDQ/hqdefault.jpg\" : {\n         ...,\n        }\n        ...,\n      ],\n      ...,\n    },\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"post\",\n        \"id\": \"19401:156\",\n        ...\n      }\n    },\n    ...\n  ]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_USER_ID",            "description": "<p>Invalid user_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Loves.php",    "groupTitle": "Loves"  },  {    "type": "post",    "url": "/v2/loves/post/get_users",    "title": "Get users who have loved a post",    "name": "Get_users_who_have_loved_a_post",    "group": "Loves",    "description": "<p>Get users who have loved a post</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/loves/post/get_users?blog_id=123&post_id=456\" \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>Blog id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "post_id",            "description": "<p>Post id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "max_created_date",            "description": "<p>(Optional) Offset for endless scrolling</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"nextUrl\": \"/v2/loves/post/get_users?blog_id=123&post_id=456&max_created_date=145764262\",\n    \"resolved\": {\n      \"user\": {\n        \"6006\": [\n          \"first_name\": \"John O'Neill\"\n          ...,\n        ],\n        ...,\n      },\n      \"followstatus\": [\n        {\n          \"type\": \"user\",\n          \"id\": \"6006\",\n          \"status\": false\n        },\n        ...,\n      ],\n      ...,\n    },\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6006\"\n      }\n    },\n    ...\n  ]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Loves.php",    "groupTitle": "Loves"  },  {    "type": "post",    "url": "/v2/loves/post/add",    "title": "Love a post",    "name": "Love_a_post",    "group": "Loves",    "description": "<p>Loves a post on a user's behalf</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/loves/post/add\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\n     'blog_id': 1234,\n     'post_id': 7890,\n     'context': 'activity',\n     'context_id': 2345\n    }\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>Blog id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "post_id",            "description": "<p>Post id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "page_type",            "description": "<p>(Optional) Page_type where loved occurred</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "context",            "description": "<p>(Optional) Context that post was saved in (usually a page_type). Current contexts include <code>saved</code>, <code>everything</code>, <code>all_unread</code>, <code>activity</code>, <code>collection_posts</code>.</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "context_id",            "description": "<p>(Optional) Corresponding id of given context (usually a user_id). E.g. If context is <code>activity</code>, <code>context_id</code> is the <code>user_id</code> of the followed user.</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "inclusion_reason",            "description": "<p>(Optional) Inclusion_reason of post that love is for</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "Empty",            "description": "<p>array - success is expressed by 200 HTTP code</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Loves.php",    "groupTitle": "Loves"  },  {    "type": "post",    "url": "/v2/loves/post/remove",    "title": "Unlove a post",    "name": "Unlove_a_post",    "group": "Loves",    "description": "<p>Unloves a post on a user's behalf</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/loves/post/remove\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\n     'blog_id': 1234,\n     'post_id': 7890\n    }\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>Blog id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "post_id",            "description": "<p>Post id of post</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "page_type",            "description": "<p>(Optional) Page_type where loved occurred</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "context",            "description": "<p>(Optional) Context that post was saved in (usually a page_type). Current contexts include <code>saved</code>, <code>everything</code>, <code>all_unread</code>, <code>activity</code>, <code>collection_posts</code>.</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "context_id",            "description": "<p>(Optional) Corresponding id of given context (usually a user_id). E.g. If context is <code>activity</code>, <code>context_id</code> is the <code>user_id</code> of the followed user.</p> "          },          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "inclusion_reason",            "description": "<p>(Optional) Inclusion_reason of post that love is for</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "Empty",            "description": "<p>array - success is expressed by 200 HTTP code</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog_id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Loves.php",    "groupTitle": "Loves"  },  {    "type": "get",    "url": "/v2/notifications/feed",    "title": "a JSON formatted representation of a users notifications",    "name": "Get_a_notification_need",    "group": "Notifications",    "description": "<p>a JSON formatted representation of a users notifications</p> ",    "permission": [      {        "name": "user"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "notification_id-",            "description": "<p>the notification id begin counting by [notification_id=PHP_INT_MAX]</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/notifications/feed?notification_id=10\" \\\n  -H \"Content-Type: application/json\" \\",        "type": "curl"      }    ],    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Notifications.php",    "groupTitle": "Notifications"  },  {    "type": "post",    "url": "/v2/notifications/mark-read",    "title": "Mark notifications as read",    "name": "Mark_notifications_as_read",    "group": "Notifications",    "description": "<p>Marks all notifications read after a specified notification id</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/notifications/mark-read\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"{\\\"min_notification_id\\\": 123}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "min_notification_id",            "description": "<p>all notifications after this id will be marked as seen</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_NOTIF_ID",            "description": "<p>minimum notification id is missing</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Notifications.php",    "groupTitle": "Notifications"  },  {    "type": "get",    "url": "/v2/products/countNewSalesForUser/{timestamp}",    "title": "Get unseen sale products count for user",    "name": "Get_count_of_products_not_viewed_by_user_in_sales_tab",    "group": "Product",    "description": "<p>Get the count of new sale products after the most recent sale product viewed by the Shop user</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/products/countNewSalesForUser/1459797746\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "number",            "description": "<p>of sale products not yet seen by the user</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/products/getloves/USER_ID",    "title": "Get loved products",    "name": "Get_loved_products_for_user",    "group": "Product",    "description": "<p>Get a paged set of loved products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/products/getloves\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "contains",            "description": "<p>products</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/products/POST_ID/BLOG_ID",    "title": "Get post & products for a single post by post id + blog_id",    "name": "Get_post___products_for_a_single_post_by_post_id___blog_id",    "group": "Product",    "description": "<p>Given a single post_id + blog_id get  post data and associated products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/products/POST_ID\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "POST_ID",            "description": "<p>The id for the post that contains the products {Number} BLOG_ID The blog_id for the post that contains the products</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>post</p> ",            "optional": false,            "field": "contains",            "description": "<p>a post {product} contains products</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_POST_ID",            "description": "<p>Invalid post_id provided INVALID_BLOG_ID Invalid blog_id provided STORY_NOT_FOUND There were no matching stories for the request</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/smartfeed/shop",    "title": "Get posts with products",    "name": "Get_posts_with_products",    "group": "Product",    "description": "<p>For those blogs that are followed by a specified user id, get the post entities that contain products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/smartfeed/shop\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "contains",            "description": "<p>posts, products, blogs, postblogs, imagesizes,</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/smartfeed/products",    "title": "Get posts with products",    "name": "Get_posts_with_products",    "group": "Product",    "description": "<p>For those blogs that are followed by a specified user id, get the post entities that contain products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/smartfeed/products\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "contains",            "description": "<p>posts, products, blogs, postblogs, imagesizes,</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/smartfeed/followed",    "title": "Get posts with products of a user's followed blogs",    "name": "Get_posts_with_products_of_a_user_s_followed_blogs",    "group": "Product",    "description": "<p>For those blogs that are followed by the current user, get the post entities that contain products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/smartfeed/followed\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "contains",            "description": "<p>posts, products, blogs, postblogs, imagesizes,</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/products/POST_ID",    "title": "Get products for a post",    "name": "Get_products_for_a_post",    "group": "Product",    "description": "<p>Given a single post_id get associated products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/products/POST_ID\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "POST_ID",            "description": "<p>The id for the post that contains the products</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>products</p> ",            "optional": false,            "field": "contains",            "description": "<p>products</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_POST_ID",            "description": "<p>Invalid post_id provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "get",    "url": "/v2/products/getSales/",    "title": "Get on sale products",    "name": "Get_sale_products",    "group": "Product",    "description": "<p>Get a paged set of on sale products</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/products/getSales\"",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "contains",            "description": "<p>products on sale</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "post",    "url": "/v2/products/love",    "title": "love a product",    "name": "Love_Product",    "group": "Product",    "description": "<p>User adds a 'love' for a product</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/products/love\"\n--header 'Content-Type: application/json' --data-binary '{\"product_id\": \"123456\"}'",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "success",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "post",    "url": "/v2/products/unlove",    "title": "- unlove a product",    "name": "Unlove_Product",    "group": "Product",    "description": "<p>User removes a 'love' for a product</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/products/unlove\"\n--header 'Content-Type: application/json' --data-binary '{\"product_id\": \"123456\"}'",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>FeedResolver</p> ",            "optional": false,            "field": "success",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Product.php",    "groupTitle": "Product"  },  {    "type": "post",    "url": "/recommend",    "title": "",    "name": "Follow_and_unfollow_blogs",    "group": "Recommend",    "description": "<p>Returns a list of recommended items relative to one or more input targets. https://github.com/bloglovin/specs/blob/master/api/recommendations.md</p> ",    "permission": [      {        "name": "app"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" /recommend?compoundPostIds=123:456&responseTypes=post \\",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>responseTypes</p> ",            "optional": false,            "field": "blog",            "description": "<p>, post {default value is post}</p> "          },          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "params",            "description": "<p>e.g. state</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>FeedResolver resolve</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "engineType",            "description": "<p>friends {default value is defaul}</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "recommendationInputs",            "description": "<p>source of recommendations compoundPostIds, blogIds, userIds, categoryIds (comma separated lists)</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"results\": [\n    {\n      \"entity\": {\n        \"type\": \"post\",\n        \"id\": \"123:456\",\n        \"postId\": \"123\",\n        \"blogId\": 456\n      },\n      \"inclusion\": [\n        {\n          \"reason\": \"recommendation\",\n          \"engine\": \"user\\/1.0.0 engine-source\\/1.0.0\"\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"nextUrl\": \"/recommend/foo/bar...\",\n      \"resolved\": {\n      \"blog\": [\"a dictionary of blogs\"],\n      \"post\": [\"a dictionary of posts\"],\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Recommend.php",    "groupTitle": "Recommend"  },  {    "type": "get",    "url": "/v2/search?q=:query",    "title": "Main",    "name": "Search",    "group": "Search",    "description": "<p>Search for blogs, paginated. Resolvers are hardcoded.</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/search?q=fashion\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "query",            "description": "<p>Query that you want to search for</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n     \"meta\": {\n         \"num_matches\": 0,\n         \"moderation\": {\n             \"keep_posts\": [\n                 2,\n                 3\n             ]\n         },\n         \"resolved\": {\n             \"blog\": [],\n             \"blogposts\": [],\n             \"smallpost\": [],\n             \"followstatus\": []\n         }\n     },\n     \"result\": []\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>The results of the search. At the time of this writing, this only includes blogs with titles that are similar to the query string.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_QUERY_STRING",            "description": "<p>Missing name</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Search.php",    "groupTitle": "Search"  },  {    "type": "get",    "url": "/v2/search/tags?q=:query",    "title": "Tag search",    "name": "Tag_Search",    "group": "Search",    "description": "<p>Search for blogs through a specific tag</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'GET' 'https://api.bloglovin.com/v2/search/tags?q=comics' \\\n-H \"Authorization: XYZ\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": {\n      \"blogposts\": {\n        \"156\": [\n          \"282797:156\",\n          ...,\n        ],\n        ...,\n      },\n      ...,\n    },\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"blog\",\n        \"id\": \"156\"\n      }\n    },\n    ...\n  ]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_QUERY",            "description": "<p>Query not included in request</p> "          }        ]      },      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Search.php",    "groupTitle": "Search"  },  {    "type": "*",    "url": "/",    "title": "Feed resolvers",    "name": "FeedResolvers",    "group": "Smartfeed",    "description": "<p>If you want to get any actual data from objects in the smartfeed, this is probably what you want.</p> <p>Feed resolvers take a list of items, usually in the result sections, and iterates over them adding data for the type of object.</p> <p>An example can be if you have a list of posts, the feed resolver will, given the posts resolver, try to look up all the post information available for that post</p> <p><strong>Available resolvers (listed in the order that they run)</strong></p> <ul> <li>blogposts : For each blog, tries to fetch latest posts</li> <li>userposts : For each user, tries to get latest saved posts</li> <li>postcollections : Get collections that a post has been saved to</li> <li>collections</li> <li>collectionposts : Get posts saved to collections</li> <li>blogowners : For each blog, gets owners</li> <li>ownedblogs: For each user, get the blogs they own</li> <li>postblogs : Get meta data on blog that a post belongs to</li> <li>blogs</li> <li>posts</li> <li>smallposts : Resolves a subset of the post fields, leaving out the largest fields</li> <li>products : Takes the post items and looks up related products</li> <li>users</li> <li>followstatus : Get follow status on blogs and users</li> <li>imagesizes : Looks up a posts images and tries to fetch their image sizes</li> <li>pornfilters : Make sure result is filtered against moderation status and porn</li> </ul> ",    "version": "0.0.0",    "filename": "api/controllers/ApiController.php",    "groupTitle": "Smartfeed"  },  {    "type": "get",    "url": "/smartfeed/:source",    "title": "Smartfeed",    "name": "Smartfeed",    "group": "Smartfeed",    "permission": [      {        "name": "user"      }    ],    "description": "<p>If you ever want a users feed, in any form, this is probably the endpoint you want to be working with.</p> ",    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/smartfeed?resolve=smallposts,blogs&responseTypes=post,blog\" \\\n-H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"unread\"",              "\"test\"",              "\"friendfeed\"",              "\"activityfeed\"",              "\"useractivitylog\""            ],            "optional": false,            "field": "\\",            "description": "<p>source Optional selector of a specific feed</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "count",            "description": "<p>Number of results you want back</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "state",            "description": "<p>Next url component, use nextUrl returned</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "resolve",            "description": "<p>CSV of FeedResolvers</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"post\"",              "\"blog\"",              "\"user\"",              "\"list.blog\"",              "\"collection\""            ],            "optional": false,            "field": "responseTypes",            "description": "<p>CSV of types you want back</p> "          }        ]      }    },    "success": {      "fields": {        "result": [          {            "group": "result",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>List of items of type FeedItem (has keys id and type)</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": "<p>Next url to call for next set of items</p> "          },          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "engine",            "description": "<p>Identifier of the engine generating the feed</p> "          },          {            "group": "meta",            "type": "<p>Object</p> ",            "optional": false,            "field": "resolve",            "description": "<p>Object keyed by resolver name, with items data</p> "          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "{\n \"meta\": {\n   \"engine\": \"smartfeed/1.3\",\n   \"nextUrl\": \"/smartfeed?state=uf%3Doffset%253D1443\",\n   \"resolved\": {\n     \"blog\": {...},\n     \"smallpost\": {\n       \"4555969067:807691\": {\n         \"post_id\": \"4555969067\",\n         \"blog_id\": \"807691\",\n         \"link\": \"http://highscalability.com/blog/2015/...\",\n         \"content\": \"...\"\n         \"date\": \"1443801410\",\n         \"title\": \"Stuff The Internet Says On Scalability For October 2nd, 2015\",\n         \"media\": \"https://c2.staticflickr.com/6/5630/21872440855_29ab353472.jpg\",\n         \"post_page_link\": \"https://www.bloglovin.com/blogs/high-...\",\n         \"post_public_url\": \"https://www.bloglovin.com/blogs/high...\",\n         \"media_type\": \"image\",\n         \"images\": {\n           \"thumbnail\": {\n             \"key\": \"https://c2.staticflickr.com/6/5630/21872440855_29ab353472.jpg\",\n             \"url\": \"https://cdn2.blovcdn.com/bloglovin/aHR0...\"\n           }\n         },\n         \"name\": \"High Scalability\",\n         \"out_link\": \"/link/post?post=4555969067&blog=807691&group=0&frame=1&frame_type=a\",\n         \"post_link\": \"https://www.bloglovin.com/blog/post/807691/4555969067\",\n         \"likes\": 0\n       },\n       ...\n     }\n   }\n },\n \"result\": [\n   {\n     \"entity\": {\n       \"type\": \"post\",\n       \"id\": \"4555969067:807691\",\n       \"postId\": \"4555969067\",\n       \"blogId\": \"807691\"\n     },\n     \"inclusion\": [\n       {\n         \"reason\": \"followBlog\",\n         \"blogId\": \"807691\"\n       }\n     ]\n   },\n   {\n     \"entity\": {\n       \"type\": \"post\",\n       \"id\": \"4555867296:3730711\",\n       \"postId\": \"4555867296\",\n       \"blogId\": \"3730711\"\n     },\n     \"inclusion\": [\n       {\n         \"reason\": \"followBlog\",\n         \"blogId\": \"3730711\"\n       }\n     ]\n   },\n   {\n     ...\n   }\n ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "INVALID_PARAM_SOURCE",            "description": "<p>Invalid source parameter</p> "          }        ]      },      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Smartfeed.php",    "groupTitle": "Smartfeed"  },  {    "type": "get",    "url": "/smartfeed/filter1/:source",    "title": "Smartfeed filtered V1",    "name": "Smartfeed_Filtered_V1",    "group": "Smartfeed",    "permission": [      {        "name": "user"      }    ],    "description": "<p>If you ever want a users feed, in any form, this is probably the endpoint you want to be working with.</p> <p>This endpoint is hard coded filtered to contain the data needed by the ios app, no resolvers necessary.</p> ",    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/smartfeed/filter1\" \\\n-H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"unread\"",              "\"friendfeed\""            ],            "optional": false,            "field": "source",            "description": "<p>Optional selector of a specific feed</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "state",            "description": "<p>Next url component, use nextUrl returned</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"post\"",              "\"blog\"",              "\"user\"",              "\"list.blog\"",              "\"collection\""            ],            "optional": false,            "field": "responseTypes",            "description": "<p>CSV of types you want back</p> "          }        ]      }    },    "success": {      "fields": {        "result": [          {            "group": "result",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>List of items of type FeedItem (has keys id and type)</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": "<p>Next url to call for next set of items</p> "          },          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "engine",            "description": "<p>Identifier of the engine generating the feed</p> "          },          {            "group": "meta",            "type": "<p>Object</p> ",            "optional": false,            "field": "resolve",            "description": "<p>Object keyed by resolver name, with items data</p> "          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "{\n \"meta\": {\n   \"engine\": \"smartfeed/1.3\",\n   \"nextUrl\": \"/smartfeed/filtered1?state=uf%3Doffset%253D1443\",\n   \"resolved\": {\n   }\n },\n \"result\": [\n   {\n     \"entity\": {\n       \"type\": \"post\",\n       \"id\": \"4555969067:807691\",\n       \"postId\": \"4555969067\",\n       \"blogId\": \"807691\"\n     },\n     \"inclusion\": [\n       {\n         \"reason\": \"followBlog\",\n         \"blogId\": \"807691\"\n       }\n     ]\n   },\n   {\n     \"entity\": {\n       \"type\": \"post\",\n       \"id\": \"4555867296:3730711\",\n       \"postId\": \"4555867296\",\n       \"blogId\": \"3730711\"\n     },\n     \"inclusion\": [\n       {\n         \"reason\": \"followBlog\",\n         \"blogId\": \"3730711\"\n       }\n     ]\n   },\n   {\n     ...\n   }\n ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "<p>String</p> ",            "optional": false,            "field": "INVALID_PARAM_SOURCE",            "description": "<p>Invalid source parameter</p> "          }        ]      },      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Smartfeed.php",    "groupTitle": "Smartfeed"  },  {    "type": "get",    "url": "/v2/blogs/get_tagged_blogs",    "title": "",    "name": "BlogsForTag",    "group": "Tags",    "description": "<p>List blog_ids given a particular tag</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/get_tagged_blogs",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  {\n    \"blog_ids\": [\n         123,\n         456,\n         789\n          ...\n    ]\n  }\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "contains",            "description": "<p>array of blogids.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_TAG_NAME",            "description": "<p>Invalid tag name provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Tags.php",    "groupTitle": "Tags"  },  {    "type": "delete",    "url": "/v2/blogs/delete_tag",    "title": "Delete a blog tag",    "name": "Delete_blog_tag",    "group": "Tags",    "description": "<p>Delete a blog post. Only open to admins or the blog's owner.</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/blogs/delete_tag\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog id provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_TAG_NAME",            "description": "<p>Invalid tag name provided</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INSUFFICIENT_PERMISSIONS",            "description": "<p>Endpoint is only open to admin or the blog's owner</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Tags.php",    "groupTitle": "Tags"  },  {    "type": "post",    "url": "/v2/users/add_to_new_post_bpn",    "title": "Add user to list of BPN users",    "name": "Add_user_to_bpn_new_post_users_table",    "group": "User",    "description": "<p>Add user to bpn_new_post_users table</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'POST' 'https://api.bloglovin.com/v2/users/add_to_new_post_bpn' \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/basicinfo",    "title": "Basic information about a user",    "name": "Basic_user_info",    "group": "User",    "description": "<p>Get the basic information needed about a user</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'GET' 'https://api.bloglovin.com/v2/users/basicinfo \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": ""          },          {            "group": "Success 200",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_brand",            "description": ""          },          {            "group": "Success 200",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_influencer",            "description": ""          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "brand_name",            "description": ""          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "brand_url",            "description": ""          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "{\n  name: string,\n  email: string,\n  is_brand: bool,\n  is_influencer: bool,\n  brand_name: string,\n  brand_url: string\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "USER_NOT_FOUND",            "description": "<p>This user doesn't exist</p> "          }        ]      },      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/settings",    "title": "Change user settings",    "name": "Change_user_settings",    "group": "User",    "description": "<p>Changes a user's settings / preferences</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'POST' 'https://api.bloglovin.com/v2/users/settings' \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"setting_type\\\": \\\"feed_order\\\", \\\"setting_value\\\": \\\"newest\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Feed order": [          {            "group": "Feed order",            "type": "<p>string</p> ",            "allowedValues": [              "\"feed_order\""            ],            "optional": false,            "field": "setting_type",            "description": "<p>The type of setting we wish to change</p> "          },          {            "group": "Feed order",            "type": "<p>string</p> ",            "allowedValues": [              "\"oldest\"",              "\"newest\""            ],            "optional": false,            "field": "setting_value",            "description": "<p>The value we want to the setting to have</p> "          }        ],        "Feed image size": [          {            "group": "Feed image size",            "type": "<p>string</p> ",            "allowedValues": [              "\"image_size\""            ],            "optional": false,            "field": "setting_type",            "description": "<p>The type of setting we wish to change</p> "          },          {            "group": "Feed image size",            "type": "<p>string</p> ",            "allowedValues": [              "\"small\"",              "\"big\""            ],            "optional": false,            "field": "setting_value",            "description": "<p>The value we want to the setting to have</p> "          }        ],        "Optional": [          {            "group": "Optional",            "type": "<p>string</p> ",            "optional": false,            "field": "page_type",            "description": "<p>The page_type to record on the datapoint that fires</p> "          },          {            "group": "Optional",            "type": "<p>string</p> ",            "optional": false,            "field": "page_context",            "description": "<p>The page_context to record on the datapoint that fires</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_SETTING_TYPE",            "description": "<p>Parameter setting_type is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_SETTING_VALUE",            "description": "<p>Parameter setting_value is missing</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/full_profile",    "title": "Get full user profile",    "name": "Full_user_profile",    "group": "User",    "description": "<p>Get full user profile (includes followed blogs as list, etc). <br> <strong>Important Note</strong>: in the list of results, the <strong>first</strong> entity is of type user and represents the user who's profile you're requesting. The <strong>second</strong> entity is a list of a few blogs that the user follows. The <strong>remaining</strong> entities are items from the user's activity log, which is just a history of certain actions they've taken, like following a blog, saving a post, or following another user.</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'GET' 'https://api.bloglovin.com/v2/users/full_profile?user_id=3604425 \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": {\n      \"blogposts\": {\n        \"156\": [\n          \"282797:156\",\n          ...,\n        ],\n        ...,\n      },\n      ...,\n    },\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6006\"\n      }\n    },\n    {\n      \"entity\": {\n        \"type\": \"list\",\n        \"meta\": [],\n        \"items\": [\n          {\n            \"entity\": {\n              \"type\": \"blog\",\n              \"id\": \"1579679\"\n            },\n            \"entity\": {\n              \"type\": \"blog\",\n              \"id\": \"2579543\"\n            }\n          }\n        ],\n      }\n    },\n    {\n      \"entity\": {\n        \"type\": \"post\",\n        \"id\": \"98287:39894\",\n        \"postId\": \"98287\",\n        \"blogId\": \"39894\",\n        \"hideDate\": false\n      },\n      \"inclusion\": [\n        {\n          \"reason\": \"activity\",\n          \"activityType\": \"friendSaved\",\n          \"subject\": [\n            {\n              \"type\": \"user\",\n              \"id\": \"6006\"\n            }\n          ],\n          \"target\": [\n            {\n              \"type\": \"collection\",\n              \"id\": \"187\"\n            }\n          ],\n          \"event_date\": \"1452895341\"\n        }\n      ]\n    }\n  ]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "USER_NOT_FOUND",            "description": "<p>This user doesn't exist</p> "          }        ]      },      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/resetpassword",    "title": "Reset a forgotten password",    "name": "Reset_Password",    "group": "User",    "description": "<p>Resets the password of a user to a specified value and provides link to log them in</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'POST' 'https://api.bloglovin.com/v2/users/resetpassword' \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"new_password\\\": \\\"123\\\", \\\"new_password_repeat\\\" : \\\"123\\\" , \\email\\\" : \\\"test@bloglovin.com\\\"  \\\"app_id\\\" : \\\"12345678\\\"}",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "new_password",            "description": "<p>for user</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "new_password_repeat",            "description": "<p>for verification</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>for user</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "app_id",            "description": "<p>to verify where the request is coming from</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  success: bool,\n  redirect_url: string\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PASSWORD_LENGTH",            "description": "<p>Password must be 6 characters long</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "PASSWORD_MATCH",            "description": "<p>Passwords must match</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Login.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/send_download_app_text",    "title": "Send \"Download App\" text message",    "name": "Send__Download_App__text_message",    "group": "User",    "description": "<p>Send &quot;Download App&quot; text message to specific phone number</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'POST' 'https://api.bloglovin.com/v2/users/send_download_app_text' \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"number\\\": \\\"1234567890\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "number",            "description": "<p>User's telephone number</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NUMBER",            "description": "<p>Parameter <code>number</code> is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "TOO_MANY_TEXT_ATTEMPTS",            "description": "<p>Either this user has sent too many texts, <br> or the phone number has received too many texts</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/track_enabled_android_notifs",    "title": "Track if user has enabled android notifications",    "name": "Track_if_android_notifications_have_been_enabled",    "group": "User",    "description": "<p>Track if user has enabled android notifications</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X 'POST' 'https://api.bloglovin.com/v2/users/track_enabled_android_notifs' \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/unfollowed",    "title": "Get unfollowed facebook friends with Bloglovin Accounts",    "name": "Unfollowed_Facebook_Friends",    "group": "User",    "description": "<p>Returns all unfollowed facebook friends with bloglovin accounts and whether the user has any new friends</p> ",    "permission": [      {        "name": "None"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/unfollowed\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  friends: [\n       {\n         type: user\n          id: 1\n        }\n     ]\n   new_friend: bool\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the users and blogs the user is following</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/password",    "title": "Change password",    "name": "Update_password",    "group": "User",    "description": "<p>Changes a user's password</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/password\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"new_password\\\": \\\"321\\\", \\\"current_password\\\": \\\"123\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "current_password",            "description": "<p>for user</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "new_password",            "description": "<p>for user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NEW_PASSWORD",            "description": "<p>Parameter new_password is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_CURRENT_PASSWORD",            "description": "<p>Parameter current_password is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_NEW_PASSWORD",            "description": "<p>Parameter new_password is invalid: Must be 6 characters minimum</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PASSWORD",            "description": "<p>Parameter current_password is incorrect</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER",            "description": "<p>The server could not verify the authenticated user</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/claimedBlogs",    "title": "Get Claimed Blogs",    "name": "User_Get_Claimed_Blogs",    "group": "User",    "description": "<p>Returns a users claimed blogs</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/claimedBlogs\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n \"meta\": {\n   \"resolved\": {\n     \"blog\": {\n       \"271591\": {\n         \"blog_id\": \"271591\",\n         \"blog_exists\": true,\n         \"cache\": true,\n         \"name\": \"NYT &gt; Fashion &amp; Style\",\n         \"url\": \"http://www.nytimes.com/pages/fashion/index.html?partner=rssnyt\",\n         \"rss\": \"http://www.nytimes.com/services/xml/rss/nyt/FashionandStyle.xml\",\n         \"desc\": \"\",\n         \"removed\": \"0\",\n         \"frame\": \"1\",\n         \"moderation_status\": \"0\",\n         \"public\": \"1\",\n         \"category\": \"0\",\n         \"moved\": \"0\",\n         \"profile_link\": \"https://bloglovin.com/blogs/nyt-andgt-fashion-andamp-style- 271591\",\n         \"blog_public_url\": \"https://bloglovin.com/blogs/nyt-andgt-fashion-andamp-style-271591\",\n         \"snap\": \"https://blovcdn.com/snaps/271591.jpg?ver=1452195925\",\n         \"followers\": 4,\n         \"type\": \"blog\",\n         \"blog_out_link\": \"/link/blog?blog=271591&frame_type=b\"\n       }\n     }\n   }\n },\n \"result\": [\n   {\n     \"entity\": {\n       \"type\": \"blog\",\n       \"id\": \"271591\"\n     }\n   }\n ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the blog ids the user has claimed</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/email_check",    "title": "Check email",    "name": "User_email_check",    "group": "User",    "description": "<p>Finds users from a list of emails</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/email_check\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"emails\\\": [\\\"test@bloglovin.com\\\"]}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "emails",            "description": "<p>List of emails to check</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"emails_not_found\": [\n      \"test@example.com\"\n    ],\n    \"resolved\": {\n      \"blog\": [],\n      \"collection\": [],\n      \"post\": [],\n      \"user\": {\n        \"6006\": {\n          \"user_id\": \"6006\",\n          \"location\": null,\n          \"facebook_profile\": null,\n          \"twitter_profile\": null,\n          \"first_name\": \"Test\",\n          \"last_name\": null,\n          \"avatar\": \"/images/user-default-120-3.png\",\n          \"username\": \"test\",\n          \"profile_link\": \"/test\",\n          \"about\": \"\",\n          \"exists\": true,\n          \"cache\": true,\n          \"followers\": 0,\n          \"type\": \"user\"\n        }\n      },\n      \"followstatus\": [\n        {\n          \"type\": \"user\",\n          \"id\": \"6006\",\n          \"status\": true\n        },\n        {\n          \"type\": \"user\",\n          \"id\": \"6004\",\n          \"status\": false\n        }\n      ]\n    }\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6006\",\n        \"email\": \"test@bloglovin.com\"\n      }\n    },\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6004\",\n        \"email\": \"admin@devlovin.com\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "meta",            "description": "<p>contains a list of emails we did not find, a dictionary of user objects where the user id is the key (these users can be followed), an array of dictionaries called followstatus that says whether the currently signed in user is following each of those users already and a result entity array that has all the users we did find in the database, including users that cannot be followed because they don't have a profile on Bloglovin (this case should be rare).</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_EMAILS",            "description": "<p>Missing emails array</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_EMAILS",            "description": "<p>Parameter emails is not an array</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/follow",    "title": "Follow",    "name": "User_follow",    "group": "User",    "description": "<p>Follows a given user or group of users</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/follow\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"user_id\\\": 1},\\\"follow\\\":true\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "user_id",            "description": "<p>for signed in user to follow</p> "          },          {            "group": "Parameter",            "type": "<p>array</p> ",            "optional": false,            "field": "user_ids",            "description": "<p>for signed in user to follow</p> "          },          {            "group": "Parameter",            "type": "<p>boolean</p> ",            "optional": false,            "field": "follow",            "description": "<p>true to follow, false to unfollow</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that has the user followed</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n  data: {invalid user_ids}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/followers/{user_id}",    "title": "Get followers",    "name": "User_followers",    "group": "User",    "description": "<p>Gets followers of a user</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "page",            "description": "<p>The page to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/followers/100?page=1\" \\",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/following/{user_id}",    "title": "Get following",    "name": "User_following",    "group": "User",    "description": "<p>Returns the blogs and users a given user follows</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "page",            "description": "<p>The page to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/following/100?page=1\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the users and blogs the user is following</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/invite",    "title": "Invite new user",    "name": "User_invite",    "group": "User",    "description": "<p>Invites a user</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/invite\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"email\\\": \\\"darren@bloglovin.com\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>for person to invite</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  \"Invite sent!\"\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_EMAIL",            "description": "<p>Parameter email is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/saved/{user_id}",    "title": "Get saved posts",    "name": "User_saved",    "group": "User",    "description": "<p>Returns the blog posts the user saved</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "date",            "description": "<p>The date offset to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/saved/100?date=1\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the users and blogs the user is following</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_ID",            "description": "<p>Parameter id is not present</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  }]