[  {    "type": "post",    "url": "/v2/announcements",    "title": "Add Announcements",    "name": "Add_Announcements",    "description": "<p>Adds an announcment to our system</p> ",    "group": "Announcements",    "permission": [      {        "name": "admin"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/announcements\" \\\n-H \"Authorization: Bearer TOKEN\"\\\n-H \"Content-Type: application/json\" \\\n-d $'{\n \"applications\": [1],\n \"title\": \"Lol test\",\n \"description\": \"Better lol rgan no\",\n \"is_image_dark\": true,\n \"banner_url\": \"http://www.lol.com/image.gif\",\n \"url\": \"http://www.lol.com\"\n}'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "applications",            "description": "<p>Application ids where to show this announcement valid applications: bl web = 1, bl IOS = 2, finale ios = 4, bl android = 8;</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Announcement title</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Announcement description</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "banner_url",            "description": "<p>Announcement banner_url</p> "          },          {            "group": "Parameter",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_image_dark",            "description": "<p>Announcement is_image_dark</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "url",            "description": "<p>Announcement url</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>ID of new announcement</p> "          }        ]      },      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n{\n  id: 1234\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_APP",            "description": "<p>Missing applications</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "get",    "url": "/v2/announcements",    "title": "Get Announcements",    "name": "Announcements",    "group": "Announcements",    "description": "<p>Returns a list of announcements sorted by date</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/announcements?locale=en_US&page=1&limit=5\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "locale",            "description": "<p>Users language preference as a locale</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": []\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"announcement_link\",\n          \"id\": \"1\",\n          \"title\": \"lol\",\n          \"url\": \"\",\n          \"description\": \"lol\\nfdffdfgf\",\n          \"banner_url\": \"http://link.com\",\n          \"is_image_dark\": \"1\",\n          \"created_date\": \"0\",\n          \"is_read\": false\n        }\n      }\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "type",            "description": "<p>Type of announcement</p> "          },          {            "group": "result",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Announcement id</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "banner_image",            "description": "<p>Url to image</p> "          },          {            "group": "result",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_image_dark",            "description": "<p>Whether the image is dark or not (main color)</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Announcement title</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Text for announcement</p> "          },          {            "group": "result",            "type": "<p>String</p> ",            "optional": false,            "field": "url",            "description": "<p>Outgoing url</p> "          },          {            "group": "result",            "type": "<p>Bool</p> ",            "optional": false,            "field": "is_read",            "description": "<p>Whether this user has seen this announcement or not</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": "<p>Url to get next page, only present if available</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/v2/announcements/{id}/read",    "title": "Mark announcement as read",    "name": "Mark_announcement_as_read",    "description": "<p>Returns a list of announcements sorted by date</p> ",    "group": "Announcements",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/announcements/21/read\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "id",            "description": "<p>Announcement id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "HTTP/1.1 200 Ok\n{}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Missing announcement id / invalid id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM",            "description": "<p>Params invalid, see human readable message string</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Announcement.php",    "groupTitle": "Announcements"  },  {    "type": "post",    "url": "/auth/grant/:type",    "title": "Grants",    "name": "Auth_grants",    "group": "Auth",    "description": "<p>Authentication grants for applications and users</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/auth/grant/app\" \\\n  -H \"Content-Type: application/json\" \\\n -d $'{\n  \"app_id\": \"fdsfg\"\n }'",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "allowedValues": [              "\"app\"",              "\"user\"",              "\"legacy\""            ],            "optional": false,            "field": "type",            "description": "<p>Type of grant</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "app_id",            "description": "<p>Application id</p> "          }        ],        "User": [          {            "group": "User",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User email</p> "          },          {            "group": "User",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>User password</p> "          }        ],        "Legacy": [          {            "group": "Legacy",            "type": "<p>String</p> ",            "optional": false,            "field": "legacy_token",            "description": "<p>Old legacy token</p> "          },          {            "group": "Legacy",            "type": "<p>Number</p> ",            "optional": false,            "field": "user",            "description": "<p>User id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  token: {string}\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>JSON Web Token</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_APP_ID",            "description": "<p>Missing app_id field</p> "          }        ],        "User": [          {            "group": "User",            "optional": false,            "field": "MISSING_PARAM_EMAIL",            "description": "<p>Missing email field</p> "          },          {            "group": "User",            "optional": false,            "field": "MISSING_PARAM_PASSWORD",            "description": "<p>Missing password field</p> "          },          {            "group": "User",            "optional": false,            "field": "USER_NOT_FOUND",            "description": ""          },          {            "group": "User",            "optional": false,            "field": "USER_NOT_VALIDATED",            "description": ""          },          {            "group": "User",            "optional": false,            "field": "USER_PERMISSION_FAILURE",            "description": "<p>User doesn't have required level</p> "          },          {            "group": "User",            "optional": false,            "field": "INVALID_PASSWORD",            "description": ""          }        ],        "Legacy": [          {            "group": "Legacy",            "optional": false,            "field": "USER_NOT_FOUND",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "MISSING_PARAM_LEGACY_TOKEN",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "MISSING_PARAM_USER",            "description": ""          },          {            "group": "Legacy",            "optional": false,            "field": "INVALID_TOKEN",            "description": ""          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Auth.php",    "groupTitle": "Auth"  },  {    "type": "*",    "url": "/anything",    "title": "JWT Authentication",    "name": "JWT_Auth",    "group": "Auth",    "description": "<p>To authorize any request with a bearer token, just add a header as described below to your request.</p> <p>The token can be requested from the /auth endpoint</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Bearer token header</p> "          }        ]      },      "examples": [        {          "title": "Header-example:",          "content": "{\n  \"Authorization\": \"Bearer TOKEN\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>Token invalid</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "USER_NOT_FOUND",            "description": "<p>This user doesn't exist</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "EXPIRED_TOKEN",            "description": "<p>This token has expired</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_APP_ID",            "description": "<p>No application id provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/ApiController.php",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/v2/collection/forstory",    "title": "Get for a story",    "name": "Collections_for_a_story",    "group": "Collections",    "description": "<p>Get collections to where a certain story is saved</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/collection/forstory?story=1234:156\" \\\n  -H \"Content-Type: application/json\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "story",            "description": "<p>Compound story id</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "page",            "description": "<p>Page in order</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n    \"meta\": {\n      \"resolved\": {\n        \"collection\": {\n          \"119\": {\n            \"id\": \"119\",\n            \"name\": \"Yo kids\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192488151,\n            \"modified\": 1438192488151,\n            \"lastAdd\": 1438192489035,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438192488159\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/119\",\n            \"slug\": \"yo-kids\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"118\": {\n            \"id\": \"118\",\n            \"name\": \"Cool kids\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438192322581,\n            \"modified\": 1438192322581,\n            \"lastAdd\": 1438192323536,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438192322615\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/118\",\n            \"slug\": \"cool-kids\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"117\": {\n            \"id\": \"117\",\n            \"name\": \"lol\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": null,\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1438190596488,\n            \"modified\": 1438190596488,\n            \"lastAdd\": 1438190597309,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1438190596503\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/117\",\n            \"slug\": \"lol\",\n            \"postCount\": 1,\n            \"followerCount\": 0\n          },\n          \"116\": {\n            \"id\": \"116\",\n            \"name\": \"blabla\",\n            \"category\": null,\n            \"description\": null,\n            \"coverImage\": \"http://3.bp.blogspot.com/-h6\",\n            \"defaultFor\": null,\n            \"public\": true,\n            \"created\": 1432301833407,\n            \"modified\": 1432301833407,\n            \"lastAdd\": 1438192590475,\n            \"authors\": [\n              {\n                \"userId\": 6004,\n                \"level\": 1,\n                \"added\": 1432301833410\n              }\n            ],\n            \"collection_public_url\": \"https://www.bloglovin.com/collections/116\",\n            \"slug\": \"blabla\",\n            \"postCount\": 2,\n            \"followerCount\": 0\n          }\n        }\n      }\n    },\n    \"result\": [\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"119\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"118\"\n        }\n      },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"117\"\n        }\n     },\n      {\n        \"entity\": {\n          \"type\": \"collection\",\n          \"id\": \"116\"\n        }\n      }\n    ]\n  }",          "type": "json"        }      ],      "fields": {        "result": [          {            "group": "result",            "type": "<p>Object</p> ",            "optional": false,            "field": "entity",            "description": "<p>[] List of collections</p> "          }        ],        "meta resolved": [          {            "group": "meta resolved",            "type": "<p>Object</p> ",            "optional": false,            "field": "collection",            "description": "<p>Object with collection resolve data</p> "          }        ],        "meta": [          {            "group": "meta",            "type": "<p>String</p> ",            "optional": false,            "field": "nextUrl",            "description": ""          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_STORY",            "description": "<p>No query param story provided</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Collection.php",    "groupTitle": "Collections"  },  {    "type": "*",    "url": "/",    "title": "Error handler",    "name": "Error_handler",    "group": "Error",    "error": {      "examples": [        {          "title": "Error-example:",          "content": "{\n  error: {String} Machine readable error code,\n  message: {String} Human readable error message,\n  code: {Number} HTTP status code,\n  data: {Object} Error related data,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Error.php",    "groupTitle": "Error"  },  {    "type": "post",    "url": "/v2/groups",    "title": "Create group",    "name": "Group_create",    "group": "Group",    "description": "<p>Creates a group</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/groups\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"blog_ids\\\": [1,2,3], \\\"name\\\": \\\"Test\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "blog_ids",            "description": "<p>List of blog ids for group</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Name of group</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"created\": true,\n      \"name\": \"Test\",\n      \"id\": \"1\"\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>contains the name of the group, the id, and whether or not it is new. The user must already be following the blogs in order to add them to the group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NAME",            "description": "<p>Missing name</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_IDS",            "description": "<p>Parameter blog_ids is not an array</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "delete",    "url": "/v2/groups/{group}",    "title": "Delete",    "name": "Group_delete",    "description": "<p>Deletes a group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/groups/100\" \\\n-H \"Authorization: XYZ\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "group",            "description": "<p>Group id</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>contains whether or not it successfully deleted the group. The user still follows all blogs in that group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_ID",            "description": "<p>Missing group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Invalid group id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "post",    "url": "/v2/groups/move_blog",    "title": "Move blog to different group",    "name": "Group_move_blog",    "description": "<p>Move a blog to an existing group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/groups/move_blog\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"blog_id\\\": 1, \\\"group_id\\\": 100}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "blog_id",            "description": "<p>ID of blog to add</p> "          },          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "group_id",            "description": "<p>ID of group to move blog to</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>will contain a boolean success. If it is successful the blog was moved to the new group. A blog can only be a part of one group per user at a time.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_GROUP_ID",            "description": "<p>Missing group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>Missing blog id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_GROUP_ID",            "description": "<p>Invalid group id</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_BLOG_ID",            "description": "<p>Invalid blog id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "delete",    "url": "/v2/groups/remove_blog/{blog}",    "title": "Remove blog from group",    "name": "Group_remove_blog",    "description": "<p>Remove a blog from a group</p> ",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"DELETE\" \"https://api.bloglovin.com/v2/groups/remove_blog/100\" \\\n-H \"Authorization: XYZ\" \\",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Int</p> ",            "optional": false,            "field": "blog",            "description": "<p>ID of blog to remove from group</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"result\": [\n    {\n      \"success\": true,\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "result",            "description": "<p>just says success is true. The user still follows the blog in that group.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_BLOG_ID",            "description": "<p>Missing blog_id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Group.php",    "groupTitle": "Group"  },  {    "type": "get",    "url": "/v2/search?q=:query",    "title": "Main",    "name": "Search",    "group": "Search",    "description": "<p>Search for blogs, paginated. Resolvers are hardcoded.</p> ",    "permission": [      {        "name": "none"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/search?q=fashion\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "query",            "description": "<p>Query that you want to search for</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n     \"meta\": {\n         \"num_matches\": 0,\n         \"moderation\": {\n             \"keep_posts\": [\n                 2,\n                 3\n             ]\n         },\n         \"resolved\": {\n             \"blog\": [],\n             \"blogposts\": [],\n             \"smallpost\": [],\n             \"followstatus\": []\n         }\n     },\n     \"result\": []\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "results",            "description": "<p>The results of the search. At the time of this writing, this only includes blogs with titles that are similar to the query string.</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_QUERY_STRING",            "description": "<p>Missing name</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/Search.php",    "groupTitle": "Search"  },  {    "type": "*",    "url": "/",    "title": "Feed resolvers",    "name": "FeedResolvers",    "group": "Smartfeed",    "description": "<p>If you want to get any actual data from objects in the smartfeed, this is probably what you want.</p> <p>Feed resolvers take a list of items, usually in the result sections, and iterates over them adding data for the type of object.</p> <p>An example can be if you have a list of posts, the feed resolver will, given the posts resolver, try to look up all the post information available for that post</p> <p><strong>Available resolvers</strong></p> <ul> <li>posts</li> <li>blogs</li> <li>users</li> <li>collections</li> <li>smallposts : Resolves a subset of the post fields, leaving out the largest fields</li> <li>products : Takes the post items and looks up related products</li> <li>imagesizes : Looks up a posts images and tries to fetch their image sizes</li> <li>blogposts : For each blog, tries to fetch latest posts</li> <li>userposts : For each user, tries to get latest saved posts</li> <li>postcollections : Get collections that a post has been saved to</li> <li>followstatus : Get follow status on blogs and users</li> </ul> ",    "version": "0.0.0",    "filename": "api/controllers/ApiController.php",    "groupTitle": "Smartfeed"  },  {    "type": "get",    "url": "/smartfeed/:service",    "title": "Smartfeed",    "name": "Smartfeed",    "group": "Smartfeed",    "description": "<p>The magic world of the smartfeed</p> ",    "permission": [      {        "name": "user"      }    ],    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/Smartfeed.php",    "groupTitle": "Smartfeed"  },  {    "type": "post",    "url": "/v2/users/password",    "title": "Change password",    "name": "Update_password",    "group": "User",    "description": "<p>Changes a user's password</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/password\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"new_password\\\": \\\"321\\\", \\\"current_password\\\": \\\"123\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "current_password",            "description": "<p>for user</p> "          },          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "new_password",            "description": "<p>for user</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  ''\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_NEW_PASSWORD",            "description": "<p>Parameter new_password is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_CURRENT_PASSWORD",            "description": "<p>Parameter current_password is missing</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_NEW_PASSWORD",            "description": "<p>Parameter new_password is invalid: Must be 6 characters minimum</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PASSWORD",            "description": "<p>Parameter current_password is incorrect</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_USER",            "description": "<p>The server could not verify the authenticated user</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/email_check",    "title": "Check email",    "name": "User_email_check",    "group": "User",    "description": "<p>Finds users from a list of emails</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/email_check\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"emails\\\": [\\\"test@bloglovin.com\\\"]}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Array</p> ",            "optional": false,            "field": "emails",            "description": "<p>List of emails to check</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"emails_not_found\": [\n      \"test@example.com\"\n    ],\n    \"resolved\": {\n      \"blog\": [],\n      \"collection\": [],\n      \"post\": [],\n      \"user\": {\n        \"6006\": {\n          \"user_id\": \"6006\",\n          \"location\": null,\n          \"facebook_profile\": null,\n          \"twitter_profile\": null,\n          \"first_name\": \"Test\",\n          \"last_name\": null,\n          \"avatar\": \"/images/user-default-120-3.png\",\n          \"username\": \"test\",\n          \"profile_link\": \"/test\",\n          \"about\": \"\",\n          \"exists\": true,\n          \"cache\": true,\n          \"followers\": 0,\n          \"type\": \"user\"\n        }\n      },\n      \"followstatus\": [\n        {\n          \"type\": \"user\",\n          \"id\": \"6006\",\n          \"status\": true\n        },\n        {\n          \"type\": \"user\",\n          \"id\": \"6004\",\n          \"status\": false\n        }\n      ]\n    }\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6006\",\n        \"email\": \"test@bloglovin.com\"\n      }\n    },\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"6004\",\n        \"email\": \"admin@devlovin.com\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "meta",            "description": "<p>contains a list of emails we did not find, a dictionary of user objects where the user id is the key (these users can be followed), an array of dictionaries called followstatus that says whether the currently signed in user is following each of those users already and a result entity array that has all the users we did find in the database, including users that cannot be followed because they don't have a profile on Bloglovin (this case should be rare).</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_EMAILS",            "description": "<p>Missing emails array</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_EMAILS",            "description": "<p>Parameter emails is not an array</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/follow",    "title": "Follow",    "name": "User_follow",    "group": "User",    "description": "<p>Follows a given user</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/follow\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"user_id\\\": 1},\\\"follow\\\":true\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>int</p> ",            "optional": false,            "field": "user_id",            "description": "<p>for signed in user to follow</p> "          },          {            "group": "Parameter",            "type": "<p>boolean</p> ",            "optional": false,            "field": "follow",            "description": "<p>true to follow, false to unfollow</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that has the user followed</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/followers/{user_id}",    "title": "Get followers",    "name": "User_followers",    "group": "User",    "description": "<p>Gets followers of a user</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "page",            "description": "<p>The page to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/followers/100?page=1\" \\",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/following/{user_id}",    "title": "Get following",    "name": "User_following",    "group": "User",    "description": "<p>Returns the blogs and users a given user follows</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "page",            "description": "<p>The page to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/following/100?page=1\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the users and blogs the user is following</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "post",    "url": "/v2/users/invite",    "title": "Invite new user",    "name": "User_invite",    "group": "User",    "description": "<p>Invites a user</p> ",    "permission": [      {        "name": "user"      }    ],    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"POST\" \"https://api.bloglovin.com/v2/users/invite\" \\\n-H \"Authorization: XYZ\" \\\n-d \"{\\\"email\\\": \\\"darren@bloglovin.com\\\"}\"",        "type": "curl"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>string</p> ",            "optional": false,            "field": "email",            "description": "<p>for person to invite</p> "          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-response:",          "content": "[\n  \"Invite sent!\"\n]",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>successful sent message</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_EMAIL",            "description": "<p>Parameter email is not valid</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  },  {    "type": "get",    "url": "/v2/users/saved/{user_id}",    "title": "Get saved posts",    "name": "User_saved",    "group": "User",    "description": "<p>Returns the blog posts the user saved</p> ",    "permission": [      {        "name": "none"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "date",            "description": "<p>The date offset to get</p> "          }        ]      }    },    "examples": [      {        "title": "Example-request:",        "content": "curl -X \"GET\" \"https://api.bloglovin.com/v2/users/saved/100?date=1\"",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success-response:",          "content": "{\n  \"meta\": {\n    \"resolved\": []\n  },\n  \"result\": [\n    {\n      \"entity\": {\n        \"type\": \"user\",\n        \"id\": \"1\",\n        \"follow\": true\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": false,            "field": "a",            "description": "<p>result entity array that shows the users and blogs the user is following</p> "          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  error: {string}\n  message: {string}\n  code: {http status code}\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "MISSING_PARAM_ID",            "description": "<p>Parameter id is not present</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "INVALID_PARAM_ID",            "description": "<p>Parameter id is not a valid user id</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/User.php",    "groupTitle": "User"  }]